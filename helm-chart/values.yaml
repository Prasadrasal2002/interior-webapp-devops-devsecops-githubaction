replicaCount: 2

containerPort: 5000

image:
  repository: devopscode44/interior-web-app
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

service:
  name: flask-app
  type: ClusterIP
  port: 80
  targetPort: 5000

ingress:
  enabled: true
  className: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: "flask-alb-group"
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: "5000"
    alb.ingress.kubernetes.io/success-codes: "200"
    alb.ingress.kubernetes.io/subnets: subnet-0509391405e0c7963,subnet-0c65b98d0eec341d8

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /
    port: 5000

readinessProbe:
  httpGet:
    path: /
    port: 5000

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 60

volumes: []
volumeMounts: []

nodeSelector: {}
tolerations: []
affinity: {}

configMap:
  name: flask-config
  env:
    FLASK_ENV: production
    LOG_LEVEL: info

app:
  name: flask-app

certManager:
  enabled: false
